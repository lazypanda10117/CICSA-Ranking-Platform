# Generated by Django 2.2.3 on 2019-07-06 06:42

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(max_length=50)),
                ('account_email', models.EmailField(max_length=254)),
                ('account_salt', models.CharField(max_length=200)),
                ('account_password', models.CharField(max_length=200)),
                ('account_status', models.CharField(max_length=50)),
                ('account_linked_id', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_current_season', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=200)),
                ('event_description', models.CharField(max_length=1500)),
                ('event_status', models.CharField(max_length=50)),
                ('event_type', models.IntegerField()),
                ('event_host', models.IntegerField()),
                ('event_location', models.CharField(max_length=1000)),
                ('event_season', models.IntegerField()),
                ('event_region', models.IntegerField()),
                ('event_boat_rotation_name', models.CharField(max_length=2000)),
                ('event_race_number', models.IntegerField()),
                ('event_team_number', models.IntegerField()),
                ('event_school_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, size=None)),
                ('event_rotation_detail', django.contrib.postgres.fields.jsonb.JSONField(blank=True)),
                ('event_start_date', models.DateField(blank=True)),
                ('event_end_date', models.DateField(blank=True)),
                ('event_create_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_activity_event_parent', models.IntegerField()),
                ('event_activity_event_tag', models.IntegerField()),
                ('event_activity_name', models.CharField(max_length=100)),
                ('event_activity_order', models.IntegerField()),
                ('event_activity_result', django.contrib.postgres.fields.jsonb.JSONField()),
                ('event_activity_type', models.CharField(max_length=50)),
                ('event_activity_note', models.CharField(max_length=1500)),
                ('event_activity_status', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EventTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_tag_event_id', models.IntegerField()),
                ('event_tag_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EventTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_team_event_activity_id', models.IntegerField()),
                ('event_team_id', models.IntegerField()),
                ('event_team_member_group_id', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_creator', models.IntegerField()),
                ('log_content', django.contrib.postgres.fields.jsonb.JSONField()),
                ('log_type', models.CharField(max_length=50)),
                ('log_create_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_name', models.CharField(max_length=200)),
                ('member_school', models.IntegerField()),
                ('member_email', models.EmailField(max_length=254)),
                ('member_status', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='MemberGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_group_name', models.CharField(max_length=200)),
                ('member_group_school', models.IntegerField()),
                ('member_group_member_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
            ],
        ),
        migrations.CreateModel(
            name='NewsBump',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news_bump_bumpper_id', models.IntegerField()),
                ('news_bump_post_id', models.IntegerField()),
                ('news_bump_create_time', models.DateTimeField(auto_now_add=True, verbose_name='Bump Date')),
            ],
        ),
        migrations.CreateModel(
            name='NewsComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news_comment_owner', models.IntegerField()),
                ('news_comment_post_id', models.IntegerField()),
                ('news_comment_content', models.CharField(blank=True, max_length=1000)),
                ('news_comment_create_time', models.DateTimeField(auto_now_add=True, verbose_name='Comment Date')),
            ],
        ),
        migrations.CreateModel(
            name='NewsPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news_post_title', models.CharField(max_length=200)),
                ('news_post_content', models.CharField(blank=True, max_length=3000)),
                ('news_post_bumps', models.IntegerField(default=0)),
                ('news_post_owner', models.IntegerField()),
                ('news_post_status', models.IntegerField()),
                ('news_post_create_time', models.DateTimeField(auto_now_add=True, verbose_name='Post Date')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(max_length=200)),
                ('school_region', models.IntegerField()),
                ('school_status', models.CharField(max_length=50)),
                ('school_season_score', models.FloatField()),
                ('school_default_team_name', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_value', models.IntegerField()),
                ('score_school', models.IntegerField()),
                ('score_season', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ScoreMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_name', models.CharField(max_length=200)),
                ('score_value', models.CharField(default='RACE+1', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Summary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary_event_parent', models.IntegerField()),
                ('summary_event_school', models.IntegerField(default=0)),
                ('summary_event_ranking', models.IntegerField(default=0)),
                ('summary_event_override_ranking', models.IntegerField(default=0)),
                ('summary_event_race_score', models.IntegerField(default=0)),
                ('summary_event_league_score', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=200)),
                ('team_school', models.IntegerField()),
                ('team_tag_id', models.IntegerField()),
                ('team_status', models.CharField(max_length=50)),
            ],
        ),
    ]
